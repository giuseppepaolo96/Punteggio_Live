{"ast":null,"code":"import{createContext,useContext,useMemo}from\"react\";import{useNavigate}from\"react-router-dom\";import{useLocalStorage}from\"./useLocalStorage\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext([[],()=>null]);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useLocalStorage(\"user\",null);const navigate=useNavigate();// call this function when you want to authenticate the user\nconst login=async data=>{setUser(data);navigate(\"/account\");};// call this function to sign out logged in user\nconst logout=()=>{setUser(null);navigate(\"/\",{replace:true});};const value=useMemo(()=>({user,login,logout}),[user]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{return useContext(AuthContext);};","map":{"version":3,"names":["createContext","useContext","useMemo","useNavigate","useLocalStorage","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","navigate","login","data","logout","replace","value","Provider","useAuth"],"sources":["C:/Users/giuse/OneDrive/Desktop/PALLAVOLO/react-test/react-test/src/hooks/useAuth.tsx"],"sourcesContent":["import { createContext, useContext, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\nconst AuthContext = createContext<any>([[], () => null]);\r\n\r\nexport const AuthProvider = ({ children }: any) => {\r\n  const [user, setUser] = useLocalStorage(\"user\", null);\r\n  const navigate = useNavigate();\r\n\r\n  // call this function when you want to authenticate the user\r\n  const login = async (data: any) => {\r\n    setUser(data);\r\n    navigate(\"/account\");\r\n  };\r\n\r\n  // call this function to sign out logged in user\r\n  const logout = () => {\r\n    setUser(null);\r\n    navigate(\"/\", { replace: true });\r\n  };\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      user,\r\n      login,\r\n      logout,\r\n    }),\r\n    [user]\r\n  );\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,OAAO,KAAQ,OAAO,CAC1D,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,eAAe,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACpD,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAM,CAAC,EAAE,CAAE,IAAM,IAAI,CAAC,CAAC,CAExD,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,QAAc,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGR,eAAe,CAAC,MAAM,CAAE,IAAI,CAAC,CACrD,KAAM,CAAAS,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAW,KAAK,CAAG,KAAO,CAAAC,IAAS,EAAK,CACjCH,OAAO,CAACG,IAAI,CAAC,CACbF,QAAQ,CAAC,UAAU,CAAC,CACtB,CAAC,CAED;AACA,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBJ,OAAO,CAAC,IAAI,CAAC,CACbC,QAAQ,CAAC,GAAG,CAAE,CAAEI,OAAO,CAAE,IAAK,CAAC,CAAC,CAClC,CAAC,CAED,KAAM,CAAAC,KAAK,CAAGhB,OAAO,CACnB,KAAO,CACLS,IAAI,CACJG,KAAK,CACLE,MACF,CAAC,CAAC,CACF,CAACL,IAAI,CACP,CAAC,CACD,mBAAOL,IAAA,CAACC,WAAW,CAACY,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAR,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E,CAAC,CAED,MAAO,MAAM,CAAAU,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAnB,UAAU,CAACM,WAAW,CAAC,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}