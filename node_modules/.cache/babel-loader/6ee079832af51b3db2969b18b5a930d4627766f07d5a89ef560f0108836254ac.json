{"ast":null,"code":"import React from\"react\";import{Password}from\"primereact/password\";import{Divider}from\"primereact/divider\";import{useForm,Controller}from\"react-hook-form\";import{classNames}from\"primereact/utils\";import{Button}from\"primereact/button\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function FormWithPasswordExample(){const{handleSubmit,control,formState:{errors},watch}=useForm({defaultValues:{password:\"\",confermaPassword:\"\"},shouldFocusError:false});const onSubmit=()=>{console.log(\"confermaPassword \",control.getFieldState(\"confermaPassword\"));console.log(\"password \",control.getFieldState(\"password\"));};const getFormErrorMessage=name=>{var _name;let message=(_name=errors[name])===null||_name===void 0?void 0:_name.message;return errors[name]&&/*#__PURE__*/_jsx(\"small\",{className:\"p-error\",children:message});};const header=/*#__PURE__*/_jsx(\"div\",{className:\"font-bold mb-3\",children:\"Pick a password\"});const footer=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Suggestions\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"pl-2 ml-2 mt-0 line-height-3\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"At least one lowercase\"}),/*#__PURE__*/_jsx(\"li\",{children:\"At least one uppercase\"}),/*#__PURE__*/_jsx(\"li\",{children:\"At least one numeric\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Minimum 8 characters\"})]})]});return/*#__PURE__*/_jsx(\"div\",{className:\"card flex justify-content-center\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:classNames({\"p-error\":errors.password}),children:\"password*\"}),/*#__PURE__*/_jsx(\"span\",{className:\"p-float-label\",children:/*#__PURE__*/_jsx(Controller,{name:\"password\",control:control,rules:{required:\"Password is Is required\",pattern:{value:/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,message:\"Invalid password format\"}},render:_ref=>{let{field,fieldState}=_ref;return/*#__PURE__*/_jsx(Password,{strongRegex:\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\",header:header,footer:footer,toggleMask:true,id:field.name,...field,className:classNames({\"p-invalid\":fieldState.invalid})});}})}),getFormErrorMessage(\"password\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confermaPassword\",className:classNames({\"p-error\":errors.confermaPassword}),children:\"confermaPassword*\"}),/*#__PURE__*/_jsx(\"span\",{className:\"p-float-label\",children:/*#__PURE__*/_jsx(Controller,{name:\"confermaPassword\",control:control,rules:{required:\"confermaPassword is Is required\",validate:val=>{if(watch(\"password\")!=val){return\"ERRORE MATCHING\";}return true;},pattern:{value:/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,message:\"Invalid confermaPassword format\"}},render:_ref2=>{let{field,fieldState}=_ref2;return/*#__PURE__*/_jsx(Password,{strongRegex:\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\",header:header,footer:footer,toggleMask:true,id:field.name,...field,className:classNames({\"p-invalid\":fieldState.invalid})});}})}),getFormErrorMessage(\"confermaPassword\")]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{label:\"Submit\",type:\"submit\",className:\"p-button-primary\"})]})});}","map":{"version":3,"names":["React","Password","Divider","useForm","Controller","classNames","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FormWithPasswordExample","handleSubmit","control","formState","errors","watch","defaultValues","password","confermaPassword","shouldFocusError","onSubmit","console","log","getFieldState","getFormErrorMessage","name","_name","message","className","children","header","footer","htmlFor","rules","required","pattern","value","render","_ref","field","fieldState","strongRegex","toggleMask","id","invalid","validate","val","_ref2","label","type"],"sources":["C:/Users/giuse/OneDrive/Desktop/Vecchia versione/react-test/src/example/FormWithPasswordExample.tsx"],"sourcesContent":["import Counter from \"components/Counter\";\r\nimport React, { Suspense, useEffect, useState } from \"react\";\r\nimport { axiosInstance } from \"utils/index\";\r\nimport { Password } from \"primereact/password\";\r\nimport { Divider } from \"primereact/divider\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport { Button } from \"primereact/button\";\r\n\r\nexport default function FormWithPasswordExample() {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm({\r\n    defaultValues: {\r\n      password: \"\",\r\n      confermaPassword: \"\",\r\n    },\r\n    shouldFocusError: false,\r\n  });\r\n  const onSubmit = () => {\r\n    console.log(\"confermaPassword \", control.getFieldState(\"confermaPassword\"));\r\n    console.log(\"password \", control.getFieldState(\"password\"));\r\n  };\r\n\r\n  const getFormErrorMessage = (name: string) => {\r\n    let message: any = (errors as any)[name]?.message;\r\n    return (\r\n      (errors as any)[name] && <small className=\"p-error\">{message}</small>\r\n    );\r\n  };\r\n\r\n  const header = <div className=\"font-bold mb-3\">Pick a password</div>;\r\n  const footer = (\r\n    <>\r\n      <Divider />\r\n      <p className=\"mt-2\">Suggestions</p>\r\n      <ul className=\"pl-2 ml-2 mt-0 line-height-3\">\r\n        <li>At least one lowercase</li>\r\n        <li>At least one uppercase</li>\r\n        <li>At least one numeric</li>\r\n        <li>Minimum 8 characters</li>\r\n      </ul>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card flex justify-content-center\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"field\">\r\n          <label\r\n            htmlFor=\"password\"\r\n            className={classNames({ \"p-error\": errors.password })}\r\n          >\r\n            password*\r\n          </label>\r\n          <span className=\"p-float-label\">\r\n            <Controller\r\n              name=\"password\"\r\n              control={control}\r\n              rules={{\r\n                required: \"Password is Is required\",\r\n                pattern: {\r\n                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\r\n                  message: \"Invalid password format\",\r\n                },\r\n              }}\r\n              render={({ field, fieldState }) => (\r\n                <Password\r\n                  strongRegex=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\"\r\n                  header={header}\r\n                  footer={footer}\r\n                  toggleMask\r\n                  id={field.name}\r\n                  {...field}\r\n                  className={classNames({ \"p-invalid\": fieldState.invalid })}\r\n                />\r\n              )}\r\n            />\r\n          </span>\r\n          {getFormErrorMessage(\"password\")}\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label\r\n            htmlFor=\"confermaPassword\"\r\n            className={classNames({ \"p-error\": errors.confermaPassword })}\r\n          >\r\n            confermaPassword*\r\n          </label>\r\n          <span className=\"p-float-label\">\r\n            <Controller\r\n              name=\"confermaPassword\"\r\n              control={control}\r\n              rules={{\r\n                required: \"confermaPassword is Is required\",\r\n                validate: (val: string) => {\r\n                  if (watch(\"password\") != val) {\r\n                    return \"ERRORE MATCHING\";\r\n                  }\r\n                  return true;\r\n                },\r\n                pattern: {\r\n                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\r\n                  message: \"Invalid confermaPassword format\",\r\n                },\r\n              }}\r\n              render={({ field, fieldState }) => (\r\n                <Password\r\n                  strongRegex=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\"\r\n                  header={header}\r\n                  footer={footer}\r\n                  toggleMask\r\n                  id={field.name}\r\n                  {...field}\r\n                  className={classNames({ \"p-invalid\": fieldState.invalid })}\r\n                />\r\n              )}\r\n            />\r\n          </span>\r\n          {getFormErrorMessage(\"confermaPassword\")}\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Button label=\"Submit\" type=\"submit\" className=\"p-button-primary\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}